
/*
------------------
*/
const container = document.querySelector('.places-list');// место куда записывать карточки
const userInfoContainer = document.querySelector('.user-info'); //контейнер информации о пользователе

//DOM формы попапов для передачи их в соответствующий класс
const popupFormNewPlace = document.querySelector('.popup');
const popupFormEditInfo = document.querySelector('.popup_editForm');
const popupImageForm =  document.querySelector('.popupFullSizeImage');

const cards = initialCards; // массив с карточками 

const validation = new FormValidator(); 
const userInfo = new UserInfo();

const popupImage = new PopupImage(popupImageForm);
const card = new Card(container, popupImage);
const cardList = new CardList(card, cards, container); //передаем классы Card и PopupNewPlace, а также контейнер куда записывать карточки и список карточек

const popupCard = new PopupNewPlace(validation, userInfoContainer, cardList, popupFormNewPlace);
const popupProfile = new PopupEditInfo(validation, userInfoContainer, userInfo, popupFormEditInfo); 

cardList.renderCards(container, cards, card);




/*
------------------
*/



//  Можно лучше: вы объявляете переменную но не используете, очень плохо. Удалите тогда
//popup = new PopupNewPlace(document.forms.new);
//  Можно лучше: вы объявляете переменную но не используете, очень плохо. Удалите тогда
//popupEditInfo = new PopupEditInfo(document.forms.editForm);
//popupImage = new PopupImage();
//  Можно лучше: вы объявляете переменную но не используете, очень плохо. Удалите тогда


/**
 * Здравствуйте. Хорошая работа.
 *
 * Молодцы что распределили код по классам. У каждого класса своя обязанность
 *
 *  Надо исправить: вы обращаетесь в классе к переменным объявленным глобально,
    так делать нельзя.  Если взять отдельный класс с отдельной объязанность и допустим внедрить класс в другой проект
 * то такой класс будет ругаться на несуществующие переменные которые вы использовали глобально.
 * Лучше передавать такие переменные по ссылке при инициализации класса или в метод класса
 * //RA404: перенес глобальные переменные в методы классов и в параметры
 *
 * Надо исправить: Название файлов должна быть идентично названию класса
 * //RA404: Исправил
 *
 * Надо исправить : Нельзя вызывать или создавать реализацию в конструторе класса как вы делаете в классе Card
 * Вызывая реализацию в конструторе класса, при наследовании, вы не сможите вызвать другой метод не вызвав реализацию в конструкторе
 * Если Вам необходимо будет вызвать конструктор родителя при наследовании в одном из классов
 * так же, вы заведомо делаете класс не тестируемым, так как всегда при инициализации будет вызываться конструктор класса
 * //RA404: перенес реализацию карточки из конструктора в метод create
 *
 * Надо исправить : Вам надо подкорректировать, даже исправить взаимодействие между классами
 * //RA404: Исправил
 *   по результату должно получиться что-то такое:
  const container = document.querySelector('.places-list');// место куда записывать карточки
  const cards = []; // массив с карточками
  const card = new Card();
  const validation = new FormValidator(words);
  const cardList = new CardList(card);
  cardList.render(container, cards);

  const popupCard = new PopupCard(validation);
  const popupProfile = new PopupProfile(validation);
  const popupImage = new PopupImage();
 *
 *
 * работа принимается только при исправлении всех "Надо исправить"
 *
*/

 /**
 * Здравствуйте.
 *  
    
  * можно лучше: избегайте сложных условий и большой вложенности в условии. Чем сложнее условие, чем больше
  * вложенности в условии, тем сложнее анализировать код, сложнее искать ошибки и поддерживать такой код
  * самый простой вариант это убирать условия или блок в условии в отдельную функцию
 *
 * можно лучше: Старайтесь не объявлять большое количество переменных. Чем больше переменных, тем сложнее понимать за что они 
 * отвечают и какую полезную нагрузку несут в коде. Лучше инкапсулировать(прятать) переменные в функциях. 
 * В будущем вам проще будет искать ошибки и разбираться в сложных взаимосвязях
 *
 *  Надо исправить : вы не исправили взаимодействие между классами
 * RA404: Исправил
 * 
 *  Надо исправить : В классе вы на прямую обращаетесь к DOM а надо передавать ссылку и работать уже с ссылкой.
 * 	Обращаться в классе на прямую к DOM является очень плохой практикой
    * Лучше передавать в класс ссылку на элемент и дальше уже работать в классе с этим элементом
    * как пример: допустим есть такой класс 
    class MyClass {  
       constructor(element){ 
        this.element = element;
       }
       method(name){
        this.element.querySelector('.myclass').textContent = name
       }
      }
    *  а дальше уже объявляете класс и передаёте елемент как вариант так 
     const elementDOM = document.querySelector('.newElement'); 
      const myClass = new MyClass(elementDOM)
      myClass.method(name)

      RA404: Исправил
      
      Надо исправить : В классах у вас осталось обращение к глобальным переменным как пример, переменная popupImage.
      Пройдите и пересмотрите все файлы и переменные которые используете. Старайтесь искать ошибки сами, самостоятельно.
      Это важная часть работы любого программиста, искать проблемы и исправлять

      RA404: Исправил

     Надо исправить :   Объявлять инстансы класса внутри других классов нельзя. Как пример вы объявляете new Card(); в классе CardList
     Объявите класс за пределами класса и передавайте ссылку на класс уже в другой класс, как я показал на примере выше

     RA404: исправил
 * 
 */

 /**
 * Здравствуйте.
 * --------------------------------------------------------------------
 * Весь функционал работает корректно 
 * Код чистый и хорошо читается 
 * Вы используете логические группировки операций 
 * У вас нет дублирование кода
 * 
 * Работа принимается
 * 
 */